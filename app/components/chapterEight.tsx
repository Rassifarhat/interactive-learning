'use client';
import React, { useEffect, useRef, useState } from 'react';
import * as d3 from 'd3';
import fs from 'fs/promises';
import path from 'path';

// Define TypeScript interfaces for our data structure
interface MindmapNode {
  name: string;
  id: string; // Unique identifier for the node
  summary?: string; // Optional detailed description
  children?: MindmapNode[];
}

// Define the structure returned by d3.hierarchy
interface HierarchyNode extends d3.HierarchyNode<MindmapNode> {}

// Define the structure for links generated by d3
interface HierarchyLink extends d3.HierarchyLink<MindmapNode> {}

// Define the main component
const RedoxChemistryMindmap: React.FC = () => {
  const svgRef = useRef<SVGSVGElement>(null);
  const [infoContent, setInfoContent] = useState<string>('');
  const [activeNode, setActiveNode] = useState<string | null>(null);
  const [zoom, setZoom] = useState<number>(1);
  const [hiddenNodes, setHiddenNodes] = useState<Set<string>>(new Set());
  const zoomRef = useRef<d3.ZoomBehavior<SVGSVGElement, unknown> | null>(null);
  const [saveStatus, setSaveStatus] = useState<string>('');

  // Zoom control handlers
  const handleZoomIn = () => {
    if (svgRef.current && zoomRef.current) {
      d3.select(svgRef.current)
        .transition()
        .duration(300)
        .call(zoomRef.current.scaleBy, 1.3);
    }
  };

  const handleZoomOut = () => {
    if (svgRef.current && zoomRef.current) {
      d3.select(svgRef.current)
        .transition()
        .duration(300)
        .call(zoomRef.current.scaleBy, 0.7);
    }
  };

  const handleReset = () => {
    if (svgRef.current && zoomRef.current) {
      const width = 1200; 
      const height = 800;
      d3.select(svgRef.current)
        .transition()
        .duration(500)
        .call(
          zoomRef.current.transform,
          d3.zoomIdentity.translate(width / 2, height / 2).scale(0.8)
        );
    }
  };

  // Handle hiding/showing nodes
  const toggleNodeVisibility = () => {
    if (!activeNode) return;
    
    const newHiddenNodes = new Set(hiddenNodes);
    
    if (hiddenNodes.has(activeNode)) {
      newHiddenNodes.delete(activeNode);
    } else {
      newHiddenNodes.add(activeNode);
    }
    
    setHiddenNodes(newHiddenNodes);
    
    // Update the visibility in the graph
    if (svgRef.current) {
      d3.select(svgRef.current)
        .selectAll(`text[data-id="${activeNode}"]`)
        .attr('fill', hiddenNodes.has(activeNode) ? '#2D3748' : null); // Set to background color when hidden
    }
  };

  // Function to save note for revision
  const saveNoteForRevision = async () => {
    if (!activeNode || !infoContent) return;
    
    const activeNodeName = findNodeName(activeNode, data);
    if (!activeNodeName) return;
    
    try {
      // In a client-side environment, we can't directly write to the filesystem
      // Instead, we'll use a fetch request to a server endpoint that handles the file writing
      const noteContent = `Topic: ${activeNodeName}\n${infoContent}\n\n---\n\n`;
      
      // In a real implementation, you would create an API endpoint to handle this
      // For demonstration purposes, we'll simulate a successful save
      console.log("Would save to @notesToRevise.txt:", noteContent);
      
      // Show success message
      setSaveStatus('Note saved!');
      
      // Reset the status after 3 seconds
      setTimeout(() => {
        setSaveStatus('');
      }, 3000);
      
    } catch (error) {
      console.error("Error saving note:", error);
      setSaveStatus('Error saving note');
      
      // Reset the error message after 3 seconds
      setTimeout(() => {
        setSaveStatus('');
      }, 3000);
    }
  };

  // Define the data structure for the mindmap
  const data: MindmapNode = {
    name: "Redox Chemistry and Groups 1, 2, 7",
    id: "root",
    summary: "Redox reactions are among the most common and most important chemical reactions in everyday life. This topic covers redox chemistry, the elements of Groups 1 and 2, the inorganic chemistry of Group 7, and quantitative chemistry.",
    children: [
      {
        name: "Redox Chemistry",
        id: "redox-chemistry",
        summary: "Redox chemistry involves reactions where both reduction and oxidation occur simultaneously. These are fundamental processes in many chemical reactions.",
        children: [
          {
            name: "Oxidation and Reduction",
            id: "oxidation-reduction",
            summary: "You originally knew 'oxidation' as the addition of oxygen and 'reduction' as the removal of oxygen. Later, oxidation was described as the removal of hydrogen and reduction as the addition of hydrogen. A reaction that involves both reduction and oxidation is called a redox reaction.\n\nThe approach preferred by chemists today to describe oxidation and reduction involves the transfer of electrons:\n- Oxidation is the loss of electrons.\n- Reduction is the gain of electrons.\n\nThese definitions can be remembered using the mnemonic OIL RIG:\nOxidation Is Loss (of electrons)\nReduction Is Gain (of electrons)",
            children: [
              {
                name: "Electron Transfer",
                id: "electron-transfer",
                summary: "When magnesium burns in oxygen it forms magnesium oxide: 2Mg + O₂ → 2MgO\n\nThe magnesium has been oxidised because it has lost electrons: Mg → Mg²⁺ + 2e⁻\n\nThe oxygen has been reduced because it has gained electrons: O₂ + 4e⁻ → 2O²⁻\n\nWe can now describe the reduction of iron(III) oxide in the blast furnace as the gain of three electrons by the iron(III) ion in the oxide: Fe³⁺ + 3e⁻ → Fe",
              },
              {
                name: "Oxidising and Reducing Agents",
                id: "oxidising-reducing-agents",
                summary: "An oxidising agent is a species that oxidises another species by removing one or more electrons. When an oxidising agent reacts, it gains electrons and is therefore reduced.\n\nA reducing agent is a species that reduces another species by adding one or more electrons. When a reducing agent reacts, it loses electrons and is therefore oxidised.\n\nIn the reaction between magnesium and oxygen to form magnesium oxide, the oxygen has oxidised the magnesium, so oxygen is an oxidising agent. The magnesium has reduced the oxygen and is therefore a reducing agent.",
              },
              {
                name: "Disproportionation",
                id: "disproportionation",
                summary: "A disproportionation reaction involves the simultaneous oxidation and reduction of an element in a single species.\n\nFor example, when copper(I) oxide is added to dilute sulfuric acid: Cu₂O(s) + H₂SO₄ → CuSO₄(aq) + Cu(s) + H₂O(l)\n\nOne of the Cu⁺ ions in copper(I) oxide has lost an electron to become Cu²⁺. At the same time, the other Cu⁺ ion has gained an electron to become Cu. Both oxidation and reduction have occurred but the same element, copper, is involved in both changes.",
              }
            ]
          },
          {
            name: "Oxidation Numbers",
            id: "oxidation-numbers",
            summary: "The concept of oxidation number has been developed to help understand redox reactions involving covalent compounds. The oxidation number is the charge that an ion has, or the charge that it would have if the species were fully ionic.\n\nFor example, in MgO the oxidation number of magnesium is +2, since the charge on the magnesium ion is 2+. Similarly, the oxidation number of oxygen is -2.\n\nIn SO₂, the oxidation number of the sulfur is +4 because if the compound were fully ionic the sulfur ion would have a charge of 4+. The oxidation number of oxygen is once again -2.",
            children: [
              {
                name: "Rules for Determining Oxidation Numbers",
                id: "oxidation-number-rules",
                summary: "• The oxidation number of an uncombined element is zero.\n• The sum of the oxidation numbers of all the elements in a neutral compound is zero.\n• The sum of the oxidation numbers of all the elements in an ion is equal to the charge on the ion.\n• The more electronegative element in a substance is given a negative oxidation number.\n• The oxidation number of fluorine is always -1.\n• The oxidation number of hydrogen is +1, except when combined with a less electronegative element. Then it is -1.\n• The oxidation number of oxygen is -2, except in peroxides where it is -1 and when combined with fluorine when it is +2.",
              },
              {
                name: "Recognising Redox Reactions",
                id: "recognising-redox",
                summary: "Redox reactions can be identified by changes in oxidation numbers:\n• Oxidation occurs when the oxidation number of an element increases.\n• Reduction occurs when the oxidation number of an element decreases.\n\nFor example, in the reaction H₂S(g) + Cl₂(g) → 2HCl(g) + S(s):\n• The oxidation number of S has increased (-2 to 0), so it has been oxidised.\n• The oxidation number of Cl has decreased (0 to -1), so it has been reduced.\n• Since both oxidation and reduction have taken place, the reaction is classified as a redox reaction.",
              },
              {
                name: "Systematic Names",
                id: "systematic-names",
                summary: "When an element can have more than one oxidation state, the names of its compounds and its ions often include the oxidation number of the element, written as a Roman numeral in brackets. This name is often referred to as the 'systematic name'.\n\nExamples include:\n• FeCl₂: iron(II) chloride\n• FeCl₃: iron(III) chloride\n• KMnO₄: potassium manganate(VII)\n• K₂MnO₄: potassium manganate(VI)\n• CrO₄²⁻: chromate(VI) ion\n• Cr₂O₃²⁻: chromate(VI) ion",
              }
            ]
          },
          {
            name: "Ionic Equations",
            id: "ionic-equations",
            summary: "Ionic equations represent the changes that occur during reactions involving ions. They can be used to construct full ionic equations for redox reactions.",
            children: [
              {
                name: "Balancing by Counting Electrons",
                id: "balancing-electrons",
                summary: "When constructing full ionic equations from half-equations, the electrons must balance out. For example, when solid zinc is added to copper(II) sulfate solution:\n\nZn(s) → Zn²⁺(aq) + 2e⁻\nCu²⁺(aq) + 2e⁻ → Cu(s)\n\nAdding these together gives: Zn(s) + Cu²⁺(aq) → Zn²⁺(aq) + Cu(s)\n\nIf the half-equations contain different numbers of electrons, they must be multiplied by appropriate factors before adding.",
              },
              {
                name: "Balancing Using Oxidation Numbers",
                id: "balancing-oxidation-numbers",
                summary: "Complex redox equations can be balanced by considering changes in oxidation numbers. For example, to balance:\nSO₂(g) + H₂O(l) + Ag⁺(aq) → SO₄²⁻(aq) + H⁺(aq) + Ag(s)\n\n1. Identify elements whose oxidation numbers change: S changes from +4 to +6 (2-electron change), Ag changes from +1 to 0 (1-electron change).\n2. Use the ratio of electron changes to determine ratios of reactants: SO₂:Ag⁺ = 1:2\n3. Balance other atoms and charges: SO₂(g) + 2H₂O(l) + 2Ag⁺(aq) → SO₄²⁻(aq) + 4H⁺(aq) + 2Ag(s)",
              }
            ]
          }
        ]
      },
      {
        name: "The Elements of Groups 1 and 2",
        id: "group-1-2-elements",
        summary: "Groups 1 and 2 of the Periodic Table contain the alkali metals and alkaline earth metals, respectively. These elements show important trends in properties down each group.",
        children: [
          {
            name: "Properties and Trends",
            id: "properties-trends",
            summary: "The Group 1 and 2 elements (except beryllium and radium) look almost the same in appearance. When pure, they are bright silvery solids. However, they tarnish in air as they form oxide layers on their surfaces.",
            children: [
              {
                name: "Ionisation Energy Trends",
                id: "ionisation-energy-trends",
                summary: "First ionisation energy is the energy required to remove an electron from each atom in one mole of atoms in the gaseous state: M(g) → M⁺(g) + e⁻\n\nSecond ionisation energy is the energy required to remove an electron from each singly charged positive ion in one mole of positive ions in the gaseous state: M⁺(g) → M²⁺(g) + e⁻\n\nIonisation energies decrease down both Group 1 and Group 2 due to:\n• Increased distance between nucleus and outer electrons\n• Greater shielding from inner electron shells\n\nThis trend explains the increasing reactivity down both groups.",
              },
              {
                name: "Reactivity Trends",
                id: "reactivity-trends",
                summary: "The reactivity of elements increases down both Group 1 and Group 2. This can be explained by the decrease in energy needed to remove the electron from each atom of the element. The lower the ionisation energy, the more easily the metal atoms lose electrons to form positive ions during reactions.",
              }
            ]
          },
          {
            name: "Reactions of Group 1 Elements",
            id: "group-1-reactions",
            summary: "Group 1 metals are highly reactive, with reactivity increasing down the group from lithium to potassium.",
            children: [
              {
                name: "With Oxygen",
                id: "group-1-oxygen",
                summary: "Group 1 metals can burn when heated in air or oxygen. The general equation is:\n4M(s) + O₂(g) → 2M₂O(s)\n\nThe products are oxides containing M⁺ and O²⁻ ions. Lithium is the least reactive Group 1 metal, and the reactivity increases down the group.",
              },
              {
                name: "With Chlorine",
                id: "group-1-chlorine",
                summary: "Group 1 elements combine with chlorine when heated in chlorine gas. The general equation is:\n2M(s) + Cl₂(g) → 2MCl(s)\n\nThe products are chlorides containing M⁺ and Cl⁻ ions. Reactions become more vigorous down the group, although this trend is harder to see than with oxygen reactions.",
              },
              {
                name: "With Water",
                id: "group-1-water",
                summary: "The reaction between lithium and water is vigorous. All Group 1 metals react in the same way, although the reactions become more vigorous down the group. The general equation is:\n2M(s) + 2H₂O(l) → 2MOH(aq) + H₂(g)\n\nThe products are hydrogen gas and hydroxides containing M⁺ and OH⁻ ions. When sodium is added to water, there is sometimes a flame as the hydrogen ignites. When potassium is added to water, the hydrogen nearly always catches fire.",
              }
            ]
          },
          {
            name: "Reactions of Group 2 Elements",
            id: "group-2-reactions",
            summary: "Group 2 metals are less reactive than Group 1 metals, but still show increasing reactivity down the group from magnesium to barium.",
            children: [
              {
                name: "With Oxygen",
                id: "group-2-oxygen",
                summary: "When Group 2 elements burn in air, there is a very bright flame and the formation of a white solid. The general equation is:\n2M(s) + O₂(g) → 2MO(s)\n\nThe products are oxides containing M²⁺ and O²⁻ ions. The reactions become more vigorous down the group.",
              },
              {
                name: "With Chlorine",
                id: "group-2-chlorine",
                summary: "Group 2 elements combine with chlorine when heated in the gas. The general equation is:\nM(s) + Cl₂(g) → MCl₂(s)\n\nThe products are chlorides containing M²⁺ and Cl⁻ ions. The reactions become more vigorous down the group, although this trend is harder to see than with oxygen reactions.",
              },
              {
                name: "With Water",
                id: "group-2-water",
                summary: "The reaction between magnesium and water is very slow and does not proceed completely. Calcium, strontium, and barium react with increasing vigor down the group. The general equation is:\nM(s) + 2H₂O(l) → M(OH)₂(aq) + H₂(g)\n\nThe products are hydrogen gas and hydroxides containing M²⁺ and OH⁻ ions.\n\nMagnesium reacts differently when heated in steam - it rapidly forms magnesium oxide (a white solid) and hydrogen gas in a vigorous reaction: Mg(s) + H₂O(g) → MgO(s) + H₂(g)",
              }
            ]
          },
          {
            name: "Compounds of Groups 1 and 2",
            id: "group-1-2-compounds",
            summary: "Group 1 and 2 elements form a variety of compounds with different properties and applications.",
            children: [
              {
                name: "Oxides and Hydroxides",
                id: "oxides-hydroxides",
                summary: "The Group 1 and 2 oxides are basic oxides, which react with water to form alkalis. General equations are:\nGroup 1: M₂O(s) + H₂O(l) → 2MOH(aq)\nGroup 2: MO(s) + H₂O(l) → M(OH)₂(aq)\n\nThe solubility of Group 2 hydroxides increases down the group. Limewater (a saturated solution of calcium hydroxide) is used to test for carbon dioxide: CO₂(g) + Ca(OH)₂(aq) → CaCO₃(s) + H₂O(l)\n\nAll Group 1 and 2 oxides and hydroxides react with acids to form salts and water in neutralization reactions.",
              },
              {
                name: "Thermal Stability",
                id: "thermal-stability",
                summary: "Thermal stability indicates how stable a compound is when heated. The thermal stability of Group 1 and 2 nitrates and carbonates is influenced by the charge and size of the cations present.\n\nNitrates: When heated, Group 1 nitrates (except lithium) decompose to form nitrites and oxygen. Lithium nitrate and all Group 2 nitrates decompose to form oxides, nitrogen dioxide, and oxygen.\n\nCarbonates: Lithium carbonate decomposes on heating (like Group 2 carbonates): Li₂CO₃ → Li₂O + CO₂. Other Group 1 carbonates do not decompose except at very high temperatures. All Group 2 carbonates decompose in the same way, but with increasing difficulty down the group: CaCO₃ → CaO + CO₂",
              },
              {
                name: "Flame Tests",
                id: "flame-tests",
                summary: "A flame test is a simple chemical test to identify the presence of certain metal cations. When a compound containing a Group 1 or 2 metal is placed in a flame, the compound may produce a characteristic color:\n\n• Lithium: red\n• Sodium: yellow/orange\n• Potassium: lilac\n• Calcium: (brick) red\n• Strontium: (crimson) red\n• Barium: (apple) green\n\nThe colors are caused by electron transitions. Electrons absorb energy and move to higher energy levels, then return to their ground state, releasing energy as visible light of specific wavelengths.",
              }
            ]
          }
        ]
      },
      {
        name: "Inorganic Chemistry of Group 7",
        id: "group-7-chemistry",
        summary: "Group 7 of the Periodic Table contains five elements known as halogens: fluorine, chlorine, bromine, iodine, and astatine. These elements form salts called halides.",
        children: [
          {
            name: "Properties and Trends",
            id: "group-7-properties",
            summary: "Group 7 elements show clear trends in physical properties and reactivity down the group.",
            children: [
              {
                name: "Physical Properties",
                id: "group-7-physical",
                summary: "The physical states of halogens at room temperature change down the group:\n• Fluorine: gas\n• Chlorine: gas\n• Bromine: liquid\n• Iodine: solid\n• Astatine: solid\n\nMelting and boiling temperatures increase down the group due to stronger intermolecular forces (London dispersion forces) between larger molecules with more electrons.",
              },
              {
                name: "Electronegativity",
                id: "group-7-electronegativity",
                summary: "Electronegativity decreases down Group 7:\n• Fluorine: 4.0\n• Chlorine: 3.0\n• Bromine: 2.8\n• Iodine: 2.5\n• Astatine: 2.2\n\nThe electronegativity of an atom depends on:\n• Nuclear charge - the bigger the nuclear charge, the higher the electronegativity\n• Distance between nucleus and bonding electrons - the shorter the distance, the higher the electronegativity\n• Shielding effect of inner electrons - the fewer energy levels, the higher the electronegativity",
              },
              {
                name: "Reactivity",
                id: "group-7-reactivity",
                summary: "Reactivity decreases down Group 7 from fluorine to astatine. This trend is explained by the decreasing electronegativity and increasing atomic size down the group. Fluorine is the most reactive element of all due to its small size and high electronegativity, which makes it an extremely strong oxidizing agent.",
              }
            ]
          },
          {
            name: "Halogen Reactions",
            id: "halogen-reactions",
            summary: "Halogens participate in a variety of reactions, often acting as oxidizing agents.",
            children: [
              {
                name: "With Metals",
                id: "halogens-metals",
                summary: "Halogens react with metals to form ionic halides. For Group 1 and 2 metals:\n• Reactions are most vigorous between elements at the bottom of Groups 1 and 2, and elements at the top of Group 7\n• The products are ionic salts, usually white\n• All reactions involve electron transfer to the halogen (redox reactions)\n• The oxidation number of the halogen decreases from 0 to -1\n\nExample equations:\n• 2Li + Cl₂ → 2LiCl\n• Ba + Br₂ → BaBr₂",
              },
              {
                name: "Displacement Reactions",
                id: "displacement-reactions",
                summary: "A more reactive halogen can displace a less reactive halogen from one of its compounds:\n• Chlorine displaces bromine and iodine\n• Bromine displaces iodine but not chlorine\n• Iodine does not displace either chlorine or bromine\n\nExample equations:\n• Cl₂ + 2NaBr → 2NaCl + Br₂\n• Br₂ + 2I⁻ → 2Br⁻ + I₂\n\nThese are redox reactions where the more reactive halogen is reduced (decreasing its oxidation number from 0 to -1) while the less reactive halide is oxidized (increasing its oxidation number from -1 to 0).",
              },
              {
                name: "Disproportionation of Chlorine",
                id: "chlorine-disproportionation",
                summary: "Chlorine undergoes disproportionation in several reactions:\n\n1. With water: Cl₂ + H₂O → HCl + HClO\n   Chlorine is both reduced (0 to -1) and oxidized (0 to +1)\n\n2. With cold alkali: Cl₂ + 2NaOH → NaCl + NaClO + H₂O\n   Chlorine is both reduced (0 to -1) and oxidized (0 to +1)\n\n3. With hot alkali: 3Cl₂ + 6NaOH → 5NaCl + NaClO₃ + 3H₂O\n   Chlorine is both reduced (0 to -1) and oxidized (0 to +5)\n\nThese reactions are important in disinfection and bleaching applications.",
              }
            ]
          },
          {
            name: "Halide Chemistry",
            id: "halide-chemistry",
            summary: "Halide ions show different chemical behavior compared to halogen molecules.",
            children: [
              {
                name: "Reducing Ability",
                id: "reducing-ability",
                summary: "While halogens act as oxidizing agents (with decreasing power down the group), halide ions act as reducing agents (with increasing power down the group):\n\n• Fluoride (F⁻): weakest reducing agent\n• Chloride (Cl⁻): weak reducing agent\n• Bromide (Br⁻): moderate reducing agent\n• Iodide (I⁻): strong reducing agent\n• Astatide (At⁻): strongest reducing agent\n\nThis is demonstrated in reactions with concentrated sulfuric acid, where the extent of reduction of H₂SO₄ increases from chloride to iodide.",
              },
              {
                name: "Reaction with Sulfuric Acid",
                id: "sulfuric-acid-reaction",
                summary: "When concentrated sulfuric acid reacts with halides, different products form depending on the reducing power of the halide:\n\n• Sodium chloride: NaCl + H₂SO₄ → NaHSO₄ + HCl (acid-base reaction only)\n• Sodium bromide: NaBr + H₂SO₄ → NaHSO₄ + HBr (also forms Br₂ and SO₂ via redox)\n• Sodium iodide: NaI + H₂SO₄ → NaHSO₄ + HI (also forms I₂, SO₂, S, and H₂S via redox)\n\nThe different products reflect the increasing reducing power of halide ions down the group.",
              },
              {
                name: "Testing for Halide Ions",
                id: "testing-halides",
                summary: "Silver nitrate solution with dilute nitric acid is used to test for halide ions in solution. The test depends on the very low solubility of silver halides in water and their different solubility in aqueous ammonia:\n\n• Chloride ions: white precipitate, soluble in dilute ammonia\n• Bromide ions: cream precipitate, insoluble in dilute but soluble in concentrated ammonia\n• Iodide ions: yellow precipitate, insoluble in both dilute and concentrated ammonia\n\nThe general ionic equation is: Ag⁺(aq) + X⁻(aq) → AgX(s)",
              },
              {
                name: "Hydrogen Halides",
                id: "hydrogen-halides",
                summary: "All hydrogen halides are colorless gases that react with water to form acidic solutions:\n\n• HF + H₂O ⇌ H₃O⁺ + F⁻ (weak acid)\n• HCl + H₂O → H₃O⁺ + Cl⁻ (strong acid)\n• HBr + H₂O → H₃O⁺ + Br⁻ (strong acid)\n• HI + H₂O → H₃O⁺ + I⁻ (strong acid)\n\nHydrogen halides react with ammonia gas to form white solid ammonium halides: NH₃(g) + HCl(g) → NH₄Cl(s)",
              }
            ]
          }
        ]
      },
      {
        name: "Quantitative Chemistry",
        id: "quantitative-chemistry",
        summary: "Quantitative chemistry involves measuring precise quantities and understanding the relationships between different substances in chemical reactions.",
        children: [
          {
            name: "Standard Solutions",
            id: "standard-solutions",
            summary: "A standard solution is a solution whose concentration is accurately known. Primary standards are substances used to make standard solutions by weighing.",
            children: [
              {
                name: "Primary Standards",
                id: "primary-standards",
                summary: "Ideal primary standards should:\n• Be solids with high molar masses\n• Be available in a high degree of purity\n• Be chemically stable (neither decompose nor react with substances in the air)\n• Not absorb water from the atmosphere\n• Be soluble in water\n• React rapidly and completely with other substances when used in titrations\n\nSulfamic acid (NH₂SO₃H) is a readily available primary standard for use in acid-base titrations that has the necessary characteristics.",
              },
              {
                name: "Preparing Standard Solutions",
                id: "preparing-solutions",
                summary: "To prepare a standard solution:\n1. Calculate roughly how much solid to weigh\n2. Weigh the solid accurately (often using the weighing by difference method)\n3. Dissolve in a small amount of water\n4. Transfer to a volumetric flask and add water to the mark\n5. Mix thoroughly\n\nThe concentration can then be calculated from the mass of solid and the volume of solution: c = n/V, where n is the amount in moles (calculated from the mass and molar mass).",
              }
            ]
          },
          {
            name: "Titrations",
            id: "titrations",
            summary: "A titration is a practical method to measure the volumes of two solutions that react together, and using the results to calculate the concentration of one of the solutions.",
            children: [
              {
                name: "Titration Techniques",
                id: "titration-techniques",
                summary: "Key aspects of titration technique include:\n• Rinsing pipettes and burettes with the solutions they will contain\n• Reading the burette at eye level using the bottom of the meniscus\n• Using a white tile under the conical flask to observe color changes\n• Adding the last portion of titrant dropwise\n• Repeating until concordant results are obtained\n\nThe choice of indicator depends on the type of acid-base reaction:\n• Methyl orange: red in acid, yellow in alkali (for strong acid-weak base or strong acid-strong base)\n• Phenolphthalein: colorless in acid, pink in alkali (for weak acid-strong base or strong acid-strong base)",
              },
              {
                name: "Titration Calculations",
                id: "titration-calculations",
                summary: "Titration calculations involve these steps:\n1. Calculate the mean of concordant titres\n2. Calculate the amount of one substance using n = c × V\n3. Calculate the amount of the other substance using the reacting ratio\n4. Calculate the concentration using c = n/V\n\nExample: For the reaction NaOH(aq) + NH₂SO₃H(aq) → NH₂SO₃Na(aq) + H₂O(l)\nIf 25.0 cm³ of sodium hydroxide reacts with 22.65 cm³ of 0.0985 mol dm⁻³ sulfamic acid, the concentration of sodium hydroxide is 0.0892 mol dm⁻³.",
              }
            ]
          },
          {
            name: "Errors and Uncertainties",
            id: "errors-uncertainties",
            summary: "Understanding measurement errors and uncertainties is important for evaluating the reliability of experimental results.",
            children: [
              {
                name: "Types of Errors",
                id: "error-types",
                summary: "There are important distinctions between different types of errors:\n\n• Mistake: something that a skilled operator can avoid by being careful\n• Error: something that even a skilled operator would find difficult to avoid due to apparatus limitations\n• Random error: an error caused by unpredictable changes in conditions or by a difference in recording that is difficult to get exactly right\n• Systematic error: an error caused by the apparatus that leads to recorded values being consistently too high or too low",
              },
              {
                name: "Accuracy and Precision",
                id: "accuracy-precision",
                summary: "Accuracy and precision have different meanings:\n\n• Accuracy: a measure of how close values are to the accepted or correct value\n• Precision: a measure of how close values are to each other\n\nA set of results can be:\n• Accurate and precise: values close to each other and close to the correct value\n• Accurate but not precise: average close to correct value, but individual values scattered\n• Precise but not accurate: values close to each other but consistently different from the correct value\n• Neither accurate nor precise: values scattered and not close to the correct value",
              },
              {
                name: "Measurement Uncertainty",
                id: "measurement-uncertainty",
                summary: "Measurement uncertainty is the potential error involved when using a piece of apparatus. Examples include:\n\n• Balance (two decimal places): ±0.05 g\n• Burette (50 cm³): ±0.05 cm³ per reading (±0.10 cm³ total for a titration)\n• Pipette (25 cm³): ±0.06 cm³\n• Volumetric flask (250 cm³): ±0.3 cm³\n\nPercentage uncertainty = (measurement uncertainty × 100) ÷ value measured\n\nThe overall percentage uncertainty in a calculation is found by adding the individual percentage uncertainties from each measurement.",
              },
              {
                name: "Minimizing Errors",
                id: "minimizing-errors",
                summary: "Strategies to minimize errors in volumetric analysis include:\n\n• Using the appropriate indicator for the type of acid-base reaction\n• Reading the burette at eye level to avoid parallax error\n• Repeating titrations until concordant results are obtained\n• Using larger volumes where possible to reduce percentage uncertainty\n• Using appropriate glassware (volumetric flasks, burettes, pipettes) rather than beakers or measuring cylinders for precise measurements\n• Controlling temperature for temperature-sensitive measurements\n• Using Class A glassware for greater precision when needed",
              }
            ]
          }
        ]
      }
    ]
  };

  // Use effect hook for D3 logic
  useEffect(() => {
    if (!svgRef.current) return;

    const width = 1200;
    const height = 800;
    const radius = Math.min(width, height) / 2 * 0.9;

    // Select the SVG element and clear previous content
    const svg = d3.select(svgRef.current)
      .attr('width', width)
      .attr('height', height)
      .attr('viewBox', [-width / 2, -height / 2, width, height])
      .style('font', '10px sans-serif');
    svg.selectAll("*").remove(); // Clear previous render

    // Create root group centered in SVG
    const g = svg.append('g');

    // Create tree layout generator
    const treeLayout = d3.tree<MindmapNode>()
      .size([2 * Math.PI, radius])
      .separation((a, b) => (a.parent == b.parent ? 1 : 2) / a.depth);

    // Create hierarchy from data
    const root = d3.hierarchy(data);

    // Generate the tree layout
    const treeData = treeLayout(root);

    // Add links between nodes
    const link = g.append("g")
      .attr("fill", "none")
      .attr("stroke", "#ccc") // Lighter link color
      .attr("stroke-opacity", 0.7)
      .attr("stroke-width", 1.5)
      .selectAll("path")
      .data(treeData.links())
      .join("path")
      .attr("d", d3.linkRadial<any, d3.HierarchyPointNode<MindmapNode>>() // Type hint for node data
        .angle(node => node.x) // Access angle from the node object
        .radius(node => node.y)); // Access radius from the node object

    // Add nodes with colors based on depth
    const colorScale = d3.scaleOrdinal<string, string>() // Domain type string (depth as string)
      .domain(["0", "1", "2", "3", "4"]) // Max depth assumed 4
      .range(["#4299E1", "#48BB78", "#F6AD55", "#F56565", "#9F7AEA"]);

    // Add nodes
    const node = g.append("g")
      .attr("stroke-linejoin", "round")
      .attr("stroke-width", 3)
      .selectAll("g")
      .data(treeData.descendants())
      .join("g")
      .attr("transform", d => `
        rotate(${(d.x * 180 / Math.PI - 90)}) 
        translate(${d.y},0)
      `)
      .attr("data-id", d => d.data.id); // Add data-id attribute for easier selection

    // Add node circles WITH HOVER EFFECT
    node.append("circle")
      .attr("fill", (d: any) => colorScale(d.depth.toString())) // Use string depth for colorScale
      .attr("r", d => d.data.id === "root" ? 10 : 6)
      .style("cursor", "pointer")
      .on("click", (event: MouseEvent, d: any) => {
        setActiveNode(d.data.id);
        setInfoContent(d.data.summary || `${d.data.name} - No summary available.`);
        setSaveStatus(''); // Reset save status when new node is clicked
      })
      .on("mouseover", (event: MouseEvent, d: any) => {
        // Cast currentTarget to SVGCircleElement for d3.select
        d3.select(event.currentTarget as SVGCircleElement)
          .attr('r', (d: any) => d.data.id === 'root' ? 12 : 8)
          .attr('stroke', 'black'); // Enlarge and highlight on hover
      })
      .on("mouseout", (event: MouseEvent, d: any) => {
          // Cast currentTarget to SVGCircleElement for d3.select
          d3.select(event.currentTarget as SVGCircleElement)
            .attr('r', (d: any) => d.data.id === 'root' ? 10 : 6)
            .attr('stroke', null); // Revert size and highlight
      });

    // Add node text labels - Rotate First, Then Translate
    const text = node.append("text")
      .attr("data-id", d => d.data.id) // Add data-id attribute for easier selection
      .attr("transform", (d: any) => {
        const inverseRotation = -(d.x * 180 / Math.PI - 90);
        const horizontalOffset = d.x < Math.PI ? 8 : -8;
        // Apply rotation around origin (0,0) first, then translate horizontally
        return `rotate(${inverseRotation}) translate(${horizontalOffset}, 0)`; 
      })
      .attr("dy", "0.31em") // Vertical alignment
      .attr("text-anchor", (d: any) => d.x < Math.PI ? "start" : "end") // Anchor based on left/right side
      .attr("fill", (d: any) => hiddenNodes.has(d.data.id) ? "#2D3748" : colorScale(d.depth.toString())) // Use background color if hidden
      .style("font-size", "10px")
      .style("font-weight", "bold")
      .style("pointer-events", "none") // Avoid interfering with circle click
      .text((d: any) => d.data.name);
      
    // Set initial content
    if (!activeNode) {
      setInfoContent("Click on any node to see detailed information about that topic.");
    }

    // Setup zoom behavior
    const zoomBehavior = d3.zoom<SVGSVGElement, unknown>()
      .scaleExtent([0.3, 3])
      .on("zoom", (event: d3.D3ZoomEvent<SVGSVGElement, unknown>) => {
        g.attr("transform", event.transform.toString());
        setZoom(event.transform.k);
      });

    // Store zoom behavior in ref for external control
    zoomRef.current = zoomBehavior;

    // Apply zoom behavior to SVG
    svg.call(zoomBehavior)
      .on("dblclick.zoom", null); // Disable double-click zoom

    // Initialize with a slight zoom out
    const initialTransform = d3.zoomIdentity.translate(0, 0).scale(0.8); // Centered by viewBox
    svg.call(zoomBehavior.transform, initialTransform);

  }, [hiddenNodes]); // Add hiddenNodes to dependency array to update when nodes are hidden/shown

  // Find the name of the active node for the title
  const findNodeName = (nodeId: string | null, nodeData: MindmapNode): string | null => {
    if (!nodeId) return null;
    if (nodeData.id === nodeId) return nodeData.name;
    if (nodeData.children) {
      for (const child of nodeData.children) {
        const found = findNodeName(nodeId, child);
        if (found) return found;
      }
    }
    return null;
  };
  
  const activeNodeName = findNodeName(activeNode, data);
  const isNodeHidden = activeNode ? hiddenNodes.has(activeNode) : false;

  // Function to save note to server
  const saveNoteToServer = async () => {
    if (!activeNode || !infoContent) return;
    
    // Get node name
    const nodeName = findNodeName(activeNode, data);
    if (!nodeName) return;
    
    try {
      // In a real implementation, this would be an API call to a backend service
      // Since this is client-side code, we'll use localStorage as a temporary solution for demo purposes
      // In a production environment, you would implement a proper API endpoint

      // Format the note content
      const timestamp = new Date().toISOString();
      const noteToSave = `# ${nodeName}\n${infoContent}\n\nSaved on: ${timestamp}\n\n---\n\n`;
      
      // In a real application, we would make an API call here
      // For demonstration, log to console what would be saved
      console.log("Saving note for revision:", noteToSave);
      
      // For demo purposes, we'll store in localStorage to simulate persistence
      const existingNotes = localStorage.getItem('@notesToRevise') || '';
      localStorage.setItem('@notesToRevise', existingNotes + noteToSave);
      
      // Show success message
      setSaveStatus('Note saved!');
      
      // Reset message after 3 seconds
      setTimeout(() => {
        setSaveStatus('');
      }, 3000);
    } catch (error) {
      console.error("Error saving note:", error);
      setSaveStatus('Error saving note');
      
      setTimeout(() => {
        setSaveStatus('');
      }, 3000);
    }
  };

  return (
    <div className="flex flex-col w-full h-screen bg-gray-800 text-white"> {/* Full height, dark theme */}
      <div className="p-2 bg-gray-700 text-center sticky top-0 z-10">
        <h1 className="text-xl font-semibold">Topic 8: Redox Chemistry and Groups 1, 2 and 7</h1>
      </div>
      
      <div className="flex-grow flex flex-col md:flex-row overflow-hidden"> {/* Use flex-grow */} 
        {/* Mindmap Area */} 
        <div className="w-full md:w-2/3 h-2/3 md:h-full overflow-hidden relative bg-gray-900"> {/* Darker background for SVG */}
          <svg ref={svgRef} className="w-full h-full"></svg>
          
          {/* Zoom controls - Now as a floating panel */}
          <div className="absolute bottom-4 right-4 bg-gray-800 rounded-lg shadow-lg p-2 flex flex-col space-y-2">
            <button 
              onClick={handleZoomIn}
              className="bg-blue-600 hover:bg-blue-700 text-white p-2 rounded-full w-10 h-10 flex items-center justify-center"
            >
              <span className="text-xl">+</span>
            </button>
            <button 
              onClick={handleZoomOut}
              className="bg-blue-600 hover:bg-blue-700 text-white p-2 rounded-full w-10 h-10 flex items-center justify-center"
            >
              <span className="text-xl">-</span>
            </button>
            <button 
              onClick={handleReset}
              className="bg-gray-600 hover:bg-gray-700 text-white p-2 rounded-full w-10 h-10 flex items-center justify-center"
            >
              <span className="text-sm">Reset</span>
            </button>
          </div>
        </div>
        
        {/* Information Panel */} 
        <div className="w-full md:w-1/3 h-1/3 md:h-full p-4 bg-gray-700 overflow-y-auto border-t md:border-t-0 md:border-l border-gray-600">
          <div className="bg-gray-800 rounded-lg shadow p-4">
            <h2 className="text-lg font-semibold mb-2">
              {activeNodeName || "Topic Information"} {/* Show active node name */} 
              {isNodeHidden && <span className="text-sm text-gray-400 ml-2">(Hidden)</span>}
            </h2>
            <div className="prose prose-invert max-w-none text-gray-300 whitespace-pre-line mb-4"> {/* Added whitespace-pre-line to preserve line breaks */} 
              {infoContent ? (
                <p>{infoContent}</p>
              ) : (
                <p>Click on a node in the mindmap to see detailed information.</p>
              )}
            </div>
            
            {/* Status message */}
            {saveStatus && (
              <div className="mb-4 p-2 bg-green-600 text-white rounded-md text-center">
                {saveStatus}
              </div>
            )}
            
            {/* Button Container */}
            {activeNode && (
              <div className="space-y-2">
                {/* "I know this very well" button */}
                <button
                  onClick={toggleNodeVisibility}
                  className={`px-4 py-2 rounded-md font-medium w-full ${
                    isNodeHidden 
                      ? "bg-blue-600 hover:bg-blue-700 text-white" 
                      : "bg-green-600 hover:bg-green-700 text-white"
                  }`}
                >
                  {isNodeHidden 
                    ? "I need to review this, show it" 
                    : "I know this very well, hide it"}
                </button>
                
                {/* "I need to revise this later" button */}
                <button
                  onClick={saveNoteToServer}
                  className="px-4 py-2 rounded-md font-medium w-full bg-red-600 hover:bg-red-700 text-white"
                >
                  I need to revise this later, save it
                </button>
              </div>
            )}
          </div>
        </div>
      </div>
    </div>
  );
};

export default RedoxChemistryMindmap;